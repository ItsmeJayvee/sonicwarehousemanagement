@page "/editsalesinvoice/{id}"
@using Microsoft.AspNetCore.SignalR.Client
@using SonicWarehouseManagement.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Edit sales invoice</h2>
<hr />
<p>Sales Invoice: <b>@si.Invoice_No</b></p>
<p>Site: @si.Site - @si.Distributor_Desc</p>
<p>Date: @si.Calendar_Day</p>
<p>Sales Location: <b>@ssm.SalesLoc</b> | Gift Location: <b>@ssm.GiftLoc</b> | Damage Location: <b>@ssm.DamageLoc</b></p>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>Item Id</th>
            <th>Item Name</th>
            <th>Pack Size</th>
            <th>Sales CS</th>
            <th>Sales PC</th>
            <th>Free CS</th>
            <th>Free PC</th>
            <th>Sales Liter</th>
            <th>Free Liter</th>
            <th>GSV</th>
        </tr>
    </thead>
<tbody>
@if (sid == null)
{
    // do nothign
}
else
{
    @foreach (var items in sid)
    {
        <tr>
            <td style="font-size: small">@items.Product_Id</td>
            <td style="font-size: small">@items.Product_Name</td>
            <td style="font-size: small">@items.Pack_Size</td>
            <td style="font-size: small">@items.Sales_Qty_CS</td>
            <td style="font-size: small">@items.Sales_Qty_PC</td>
            <td style="font-size: small">@items.Free_Qty_CS</td>
            <td style="font-size: small">@items.Free_Qty_PC</td>
            <td style="font-size: small">@items.Sales_Qty_Liter</td>
            <td style="font-size: small">@items.Free_Qty_Liter</td>
            <td style="font-size: small">@items.GSV</td>
        </tr>
    }
}
</tbody>
</table>

@code {

    SalesInvoice_Headers si = new SalesInvoice_Headers();
    SalesInvoice_Details[] sid;
    SAPSalesmanMaster ssm = new SAPSalesmanMaster();

    private HubConnection hubCon;

    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        si = await Http.GetJsonAsync<SalesInvoice_Headers>("api/SalesInvoiceHeadersIndex/" + id);
        sid = await Http.GetJsonAsync<SalesInvoice_Details[]>("api/SalesInvoiceDetailsIndex/" + id);
        ssm = await Http.GetJsonAsync<SAPSalesmanMaster>("api/SAPSalesmanMasters/" + id);

        hubCon = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/SalesInvoiceHeadersHub"))
            .Build();

        await hubCon.StartAsync();
    }

    public bool IsConnected =>
        hubCon.State == HubConnectionState.Connected;

    public async Task updatesalesinvoice()
    {
        await Http.PutJsonAsync("api/SalesInvoiceHeaders/" + id, si);
        if (IsConnected) await SendMessage();
        NavigationManager.NavigateTo("salesinvoicelist");
    }

    Task SendMessage() => hubCon.SendAsync("SendMessage");

    void cancel()
    {
        NavigationManager.NavigateTo("salesinvoicelist");
    }

    public void Dispose()
    {
        _ = hubCon.DisposeAsync();
    }
}