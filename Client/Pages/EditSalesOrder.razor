@page "/editsalesorder/{id}"
@using Microsoft.AspNetCore.SignalR.Client
@using SonicWarehouseManagement.Shared
@using System.Text.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Sales order</h2>
<hr />
<p>Order number: <b>@solist.Order_Number</b></p>
<p>Order type: @solist.Order_Type_Desc</p>
<p>Date: @solist.SO_Date.ToShortDateString()</p>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>Item number</th>
            <th>Item description</th>
            <th>Cases</th>
            <th>Pieces</th>
            <th>Free CS</th>
            <th>Free PC</th>
        </tr>
    </thead>
    <tbody>
        @if (sod == null)
        {
            <p><em>Loading</em></p>
        }
        else 
        {
            @foreach (var items in sod)
            {
                <tr>
                    <td style="font-size: small;">@items.Material_N</td>
                    <td style="font-size: small;">@items.Article_Description</td>
                    <td style="font-size: small;">@items.Cases</td>
                    <td style="font-size: small;">@items.Pieces</td>
                    <td style="font-size: small;">@items.Free_Cases</td>
                    <td style="font-size: small;">@items.Free_Piece</td>
                </tr>
            }
        }
    </tbody>
</table>
<hr />
<div class="container">
    <div class="row">
        <div class="text-left col-md-12">
            <h6><b>Insert sales order Details:</b></h6>
        </div>
        <div class="form-inline">
            <label class="sr-only" for="search-ordernumber">Search</label>
            <input type="text" class="form-control mb-2 mr-sm-2" @bind="searchitemnum" placeholder="Search item number" />
            <button type="button" class="btn btn-primary mr-sm-2 mb-2" @onclick="Search">Search</button>
        </div>
        <div class="col-md-12">
            <hr />
            <form>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="materialn" class="control-label" style="font-size: small;">Material Number</label>
                            <input form="materialn" class="form-control" @bind="@artmas.Article_Code" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="artdesc" class="control-label" style="font-size: small;">Article Description</label>
                            <input form="artdesc" class="form-control" @bind="@artmas.Article_Description" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="packsize" class="control-label" style="font-size: small;">Pack Size</label>
                            <input form="packsize" class="form-control" @bind="@artmas.Unit_Conversion2" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="cs" class="control-label" style="font-size: small;">Cases</label>
                            <input form="cs" class="form-control" @bind="@sodlist.Cases" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="pcs" class="control-label" style="font-size: small;">Pieces</label>
                            <input form="pcs" class="form-control" @bind="@sodlist.Pieces" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="fcs" class="control-label" style="font-size: small;">Free Cases</label>
                            <input form="fcs" class="form-control" @bind="@sodlist.Free_Cases" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="fpcs" class="control-label" style="font-size: small;">Free Pieces</label>
                            <input form="fpcs" class="form-control" @bind="@sodlist.Free_Piece" />
                        </div>
                    </div>
                    <div class="col-md-12 text-center">
                        <button type="button" class="btn btn-primary mr-sm-2 mb-2" @onclick="@SaveDetails">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@code {
    ArticleMaster artmas = new ArticleMaster();
    SalesOrderHeaders solist = new SalesOrderHeaders();
    SalesOrderDetails sodlist = new SalesOrderDetails();
    SalesOrderDetails[] sod;

    private HubConnection hubCon;

    public string searchitemnum { get; set; }
    public decimal cs { get; set; }
    public decimal pc { get; set; }
    public decimal size { get; set; }
    public decimal amount { get; set; }
    public decimal sales { get; set; }
    public decimal vat { get; set; }
    public decimal net { get; set; }

    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        solist = await Http.GetJsonAsync<SalesOrderHeaders>("api/SalesOrderHeadersIndex/" + id);
        sod = await Http.GetJsonAsync<SalesOrderDetails[]>("api/SalesOrderDetailsIndex/" + solist.ID);

        hubCon = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/SalesOrderDetailsHub"))
            .Build();

        await hubCon.StartAsync();
    }

    public bool IsConnected =>
        hubCon.State == HubConnectionState.Connected;

    private async Task Search()
    {
        artmas = await Http.GetJsonAsync<ArticleMaster>("api/ArticleMasters/" + searchitemnum);
        this.StateHasChanged();
    }

    private async Task SaveDetails()
    {
        cs = Convert.ToDecimal(sodlist.Cases);
        pc = Convert.ToDecimal(sodlist.Pieces);
        size = Convert.ToDecimal(artmas.Unit_Conversion2);
        amount = Convert.ToDecimal(artmas.Secondary_Price_CS);
        sales = (cs * amount) + ((amount / size) * pc);
        vat = ((cs * amount) * Convert.ToDecimal(0.12)) + (((amount / size) * pc) * Convert.ToDecimal(0.12));
        net = sales + vat;

        var salesOrderDetails = new SalesOrderDetails { Header_ID = solist.ID, Material_N = artmas.Article_Code, Article_Description = artmas.Article_Description, Pack_Size = artmas.Unit_Conversion2, Cases = sodlist.Cases, Pieces = sodlist.Pieces, Free_Cases = sodlist.Free_Cases, Free_Piece = sodlist.Free_Piece, Delivery_Qty_CS = sodlist.Cases, Delivery_Qty_PC = sodlist.Pieces, Sales_Value = sales, VAT_Value = vat, Net_Sales = net, Cases_Pieces = sodlist.Cases+"/"+sodlist.Pieces, Free_CS_PS = sodlist.Free_Cases+"/"+sodlist.Free_Piece };
        await Http.PostJsonAsync("api/SalesOrderDetailsIndex", salesOrderDetails);
        if (IsConnected) await SendMessage();
        this.StateHasChanged();
        NavigationManager.NavigateTo("refresh/" + solist.Order_Number);
    }

    Task SendMessage() => hubCon.SendAsync("SendMessage");

    void cancel()
    {
        NavigationManager.NavigateTo("salesorderlist");
    }

    public void Dispose()
    {
        _ = hubCon.DisposeAsync();
    }
}
