@page "/viewinventory/{id}"
@using Microsoft.AspNetCore.SignalR.Client
@using SonicWarehouseManagement.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Inventory</h2>
<p>Article code: <b>@artmas.Article_Code</b></p>
<p>Article Description: <b>@artmas.Article_Description</b></p>
<hr />
@*<p>Item number: <b>@invh.Item_Code</b></p>*@
<table class="table">
    <thead>
        <tr>
            <th>Quantity</th>
            <th>Transaction Type</th>
            <th>Uom</th>
            <th>Warehouse</th>
            <th>Location</th>
        </tr>
    </thead>
    <tbody>
        @if (invd == null)
        {
            // do nothing
        }
        else
        {
            @foreach (var items in invd)
            {
                <tr>
                    <td style="font-size: small">@items.Quantity</td>
                    <td style="font-size: small">@items.Transaction_Type</td>
                    <td style="font-size: small">@items.Uom</td>
                    <td style="font-size: small">@items.Warehouse</td>
                    <td style="font-size: small">@items.Location</td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    ArticleMaster artmas = new ArticleMaster();
    InventoryDetails[] invd;

    private HubConnection hubCon;

    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        invd = await Http.GetJsonAsync<InventoryDetails[]>("api/InventoryDetailsManual/getDetails/" + id);
        artmas = await Http.GetJsonAsync<ArticleMaster>("api/ArticleMasters/" + id);

        hubCon = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/InventoryDetailsHub"))
        .Build();

        await hubCon.StartAsync();
    }

    public bool IsConnected =>
        hubCon.State == HubConnectionState.Connected;

    Task SendMessage() => hubCon.SendAsync("SendMessage");

    public void Dispose()
    {
        _ = hubCon.DisposeAsync();
    }
}
