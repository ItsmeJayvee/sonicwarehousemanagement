@page "/deletesalesinvoice/{id}"
@using Microsoft.AspNetCore.SignalR.Client
@using SonicWarehouseManagement.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Delete invoice</h3>
<hr />
<p>Are you sure you want to delete this invoice?</p>
<br />

<div class="col-md-4">
    <table class="table">
        <thead>
            <tr>
                <th style="font-size: small;">Invoice number</th>
                <th style="font-size: small;">Calendar day</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="font-size: small;">@isr.Invoice_No</td>
                <td style="font-size: small;">@isr.Calendar_Day</td>
            </tr>
        </tbody>
    </table>
    <div class="form-group">
        <input type="button" class="btn btn-danger" @onclick="@deletesalesinvoice" value="Delete" />
        <input type="button" class="btn btn-primary" @onclick="@cancel" value="Cancel" />
    </div>
</div>

@code {
    ISR_DailySalesInvoice isr = new ISR_DailySalesInvoice();

    private HubConnection hubCon;

    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        isr = await Http.GetJsonAsync<ISR_DailySalesInvoice>("api/ISR_DailySalesInvoiceManual/" + id);

        hubCon = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/DailySalesInvoiceManualHub"))
            .Build();

        await hubCon.StartAsync();
    }

    public bool IsConnected =>
        hubCon.State == HubConnectionState.Connected;

    Task SendMessage() => hubCon.SendAsync("SendMessage");

    public async Task deletesalesinvoice()
    {
        await Http.DeleteAsync("api/ISR_DailySalesInvoiceManual/" + id);
        if (IsConnected) await SendMessage();
        NavigationManager.NavigateTo("salesinvoicelist");
    }

    void cancel()
    {
        NavigationManager.NavigateTo("salesinvoicelist");
    }
}
